Provider.tf

provider "aws" {
  region  = "eu-central-1"
  profile = "terraform-user"
}
----------------------------------------------------------------------------------------------------------

variable.tf

variable "vpc_cidr" {
  type        = string
  description = "Public Subnet CIDR values"
  default     = "10.0.0.0/16"
}

variable "cidr_public_subnet" {
  type        = list(string)
  description = "Public Subnet CIDR values"
  default     = ["10.0.1.0/24", "10.0.2.0/24"]
}

variable "cidr_private_subnet" {
  type        = list(string)
  description = "Private Subnet CIDR values"
  default     = ["10.0.3.0/24", "10.0.4.0/24"]
}

variable "eu_availability_zone" {
 type        = list(string)
 description = "Availability Zones"
 default     = ["eu-central-1a", "eu-central-1b"]
}
-----------------------------------------------------------------------------------------------------------------------
vpc-setup.tf


# Create AWS VPC in eu-central-1
# CIDR - 10.0.0.0/16
resource "aws_vpc" "vpc-gkaws-eu-central-1" {
  cidr_block = var.vpc_cidr
  tags = {
    Name = "VPC: gkaws-eu-central-1"
  }
}
------------------------------------------------------------------------------------------------------------------------
subnet-setup.tf

# Setup public subnet
resource "aws_subnet" "aws_gkaws_public_subnets" {
  count      = length(var.cidr_public_subnet)
  vpc_id     = aws_vpc.vpc-gkaws-eu-central-1.id
  cidr_block = element(var.cidr_public_subnet, count.index)
  availability_zone = element(var.eu_availability_zone, count.index)

  tags = {
    Name = "Subnet-Public : Public Subnet ${count.index + 1}"
  }
}

# Setup private subnet
resource "aws_subnet" "aws_gkaws_private_subnets" {
  count      = length(var.cidr_private_subnet)
  vpc_id     = aws_vpc.vpc-gkaws-eu-central-1.id
  cidr_block = element(var.cidr_private_subnet, count.index)
  availability_zone = element(var.eu_availability_zone, count.index)

  tags = {
    Name = "Subnet-Private : Private Subnet ${count.index + 1}"
  }
}
------------------------------------------------------------------------------------------------------------------

internet-gateway-setup.tf

resource "aws_internet_gateway" "public_internet_gateway" {
  vpc_id = aws_vpc.vpc-gkaws-eu-central-1.id
  tags = {
    Name = "IGW: For gkaws EU Central Project"
  }
}
-----------------------------------------------------------------------------------------------------------------------
nat-gatwway-setup.tf


resource "aws_eip" "nat_eip" {
  count = length(var.cidr_private_subnet)
  vpc = true
}

resource "aws_nat_gateway" "nat_gateway" {
  count      = length(var.cidr_private_subnet)
  depends_on = [aws_eip.nat_eip]
  allocation_id = aws_eip.nat_eip[count.index].id
  subnet_id = aws_subnet.aws_gkaws_private_subnets[count.index].id
  tags = {
    "Name" = "Private NAT GW: For gkaws EU Central Project "
  }
}
---------------------------------------------------------------------------------------------------
cmk-setup.tf

# Create a CMK Key
resource "aws_kms_key" "cmk_key" {
  description             = "Customer Managed Key"
  deletion_window_in_days = 30
}
--------------------------------------------------------------------------------------------------
ec2-instance-setup.tf
# EC2 Instance
resource "aws_instance" "gkaws_instance" {
  ami           = "ami-0094635555ed28881"  
  instance_type = "t2.micro"     
  key_name      = "AWS-TASK"  
  subnet_id     = "subnet-08744fecf0e67130e"

  root_block_device {
    volume_type           = "gp2"
    volume_size           = 30
    encrypted             = true
    kms_key_id            = aws_kms_key.cmk_key.key_id
    delete_on_termination = true
  }

  tags = {
    Name = "gkawsInstance"
  }
}

----------------------------------------------------------------------------------------------------------------
rds-setup.tf

# RDS Instance
resource "aws_db_instance" "gkaws_db_instance" {
  engine               = "mysql"     
  engine_version       = "8.0.32"    
  instance_class       = "db.t3.micro"  
  allocated_storage    = 20
  identifier           = "gkaws-db"
  username             = "admin"     
  password             = "adminadmin"  
  db_subnet_group_name = "my_rds_grp"  

  # Encryption settings
  storage_encrypted       = true
  kms_key_id              = "arn:aws:kms:eu-central-1:772166561532:key/746f9d9f-a1a3-45f3-ba79-90ffb6162738"  

  tags = {
    Name = "gkawsDBInstance"
  }
}



